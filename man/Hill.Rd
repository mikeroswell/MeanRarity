% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimation_funs.R
\name{Hill}
\alias{Hill}
\title{#-----------------------------------------------Diversity profile estimator (incidence data)

#-----------------------------------------------
#' Chao_Hill_inc(x, q) is a function of obtaining estimators of Hill numbers of order q based on incidence data.
#' @param x a vector of species incidence-based sample frequencies. The first entry of x must be the number of sampling units.
#' @param q a numeric or a vector of diversity order.
#' @return a numerical vector.}
\usage{
Hill(x, q, datatype = c("abundance", "incidence"))
}
\arguments{
\item{x}{a vector of species sample frequencies (for abundance data), or incidence-based sample frequencies (1st entry must be the number of sampling unit).}

\item{q}{a numeric or a vector of diversity order.}

\item{datatype}{a character of data type,"abundance" or "incidence".}
}
\value{
a numerical vector.
}
\description{
Chao_Hill_inc = function(x,q){
n = x\link{1}
x = x\link{-1};x = x\link{x>0}
U = sum(x)
f1 = sum(x==1)
f2 = sum(x==2)
p1 = ifelse(f2>0,2\emph{f2/((n-1)\emph{f1+2}f2),ifelse(f1>0,2/((n-1)}(f1-1)+2),1))
r <- 0:(n-1)
Sub <- function(q){
if(q==0){
sum(x>0) + (n-1)/n\emph{ifelse(f2>0, f1^2/2/f2, f1}(f1-1)/2)
}
else if(q==1){
A <- sum(x/U*(digamma(n)-digamma(x)))
B <- ifelse(f1==0|p1==1,0,f1/U*(1-p1)^(1-n)\emph{(-log(p1)-sum(sapply(1:(n-1), function(r)(1-p1)^r/r))))
exp(A+B)\emph{U/n
}else if(abs(q-round(q))==0){
A <- sum(exp(lchoose(x,q)-lchoose(n,q)))
ifelse(A==0,NA,((n/U)^q}A)^(1/(1-q)))
}else {
sort.data = sort(unique(x))
tab = table(x)
term = sapply(sort.data,function(z){
k=0:(n-z)
sum(choose(k-q,k)\emph{exp(lchoose(n-k-1,z-1)-lchoose(n,z)))
})
A = sum(tab}term)
B = ifelse(f1==0|p1==1,0,f1/n}(1-p1)^(1-n)\emph{(p1^(q-1)-sum(choose(q-1,r)}(p1-1)^r)))
((n/U)^q*(A+B))^(1/(1-q))
}
}
sapply(q, Sub)
}
}
\details{
#' Chao_Hill(x, q,datatype) combines Chao_Hill_abu and Chao_Hill_inc given a specified datatype (either abundance data or incidence data).
#' @param x a vector of species sample frequencies (for abundance data), or incidence-based sample frequencies (1st entry must be the number of sampling unit).
#' @param q a numeric or a vector of diversity order.
#' @param datatype a character of data type,"abundance" or "incidence".
#' @return a numerical vector.

Chao_Hill = function(x,q,datatype = c("abundance","incidence")){
datatype = match.arg(datatype,c("abundance","incidence"))
if(datatype == "abundance"){
est = Chao_Hill_abu(x,q)
}else{
est = Chao_Hill_inc(x,q)
}
return(est)
}
Hill(x, q, datatype) is a function of obtaining the empirical Hill numbers of order q based on abundance data or incidence data.
}
